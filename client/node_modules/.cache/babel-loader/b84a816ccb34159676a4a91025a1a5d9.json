{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst useChat = roomId => {\n  _s();\n\n  const [messages, setMessages] = useState([]); // creates a {current} object that is the same everytime it's called, .current property is a mutable value \n\n  const socketRef = useRef();\n\n  const sendMessage = messageBody => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id\n    });\n  };\n\n  return {\n    messages,\n    sendMessage\n  };\n};\n\n_s(useChat, \"i51Fl88aixFz0pdnUBVyYMzBocs=\");\n\nexport default useChat;","map":{"version":3,"sources":["/Users/jimmylin/Desktop/Projects/socket.io-react-hooks-chat/client/src/useChat.js"],"names":["useEffect","useRef","useState","socketIOClient","NEW_CHAT_MESSAGE_EVENT","SOCKET_SERVER_URL","useChat","roomId","messages","setMessages","socketRef","sendMessage","messageBody","current","emit","body","senderId","id"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,sBAAsB,GAAG,gBAA/B;AACA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CAD0B,CAE1B;;AACA,QAAMQ,SAAS,GAAGT,MAAM,EAAxB;;AAKA,QAAMU,WAAW,GAAIC,WAAD,IAAiB;AACnCF,IAAAA,SAAS,CAACG,OAAV,CAAkBC,IAAlB,CAAuBV,sBAAvB,EAA+C;AAC7CW,MAAAA,IAAI,EAAEH,WADuC;AAE7CI,MAAAA,QAAQ,EAAEN,SAAS,CAACG,OAAV,CAAkBI;AAFiB,KAA/C;AAID,GALD;;AAOA,SAAO;AAAET,IAAAA,QAAF;AAAYG,IAAAA;AAAZ,GAAP;AACD,CAhBD;;GAAML,O;;AAkBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst useChat = (roomId) => {\n  const [messages, setMessages] = useState([]);\n  // creates a {current} object that is the same everytime it's called, .current property is a mutable value \n  const socketRef = useRef();\n\n\n\n\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n    });\n  };\n\n  return { messages, sendMessage };\n};\n\nexport default useChat;\n"]},"metadata":{},"sourceType":"module"}